module template-elements

language webdsl-statix

fixture [[
  application test_template_elements

  template x {
    [[...]]
  }
]]

test action [[
  action testAction() {

  }
]] parse succeeds

test action ignore validation [[
  action ignore-validation testAction() {

  }
]] parse succeeds

test ajax statements 1 [[
  action testAction() {
    replace("1"+"2",test());
    append("1"+"2",test());
    visibility("1"+"2",show);
    restyle("1"+"2","gfhfg");
    clear("1"+"2");
  }
]] parse succeeds

test ajax statements 2 [[
  action testAction() {
    replace(bla,test());
    append(bla,test());
    visibility(bla,show);
    restyle(bla,"gfhfg");
    clear(bla);
  }
]] parse succeeds

test ajax statements 3 [[
  action testAction() {
    replace("dsfdgdg",test());
    append("dsfdgdg",test());
    visibility("dsfdgdg",show);
    restyle("dsfdgdg","gfhfg");
    clear("dsfdgdg");
  }
]] parse succeeds

test ajax statements 4 [[
  action testAction() {
    replace(a.b,test());
    append(a.b,test());
    visibility(a.b,show);
    restyle(a.b,"gfhfg");
    clear(a.b);
  }
]] parse succeeds

test select attributes [[
  div[input attributes, all attributes]{}
  <div
  input attributes
  all attributes
  ignore default class
  >
  </div>
]] parse succeeds

test attributes template call [[
  container[
    class ="scopediv border rndButton "+attribute("class",""),
    onclick = ""+attribute("onclick",""),
    style  = attribute("style"),  
    all attributes,
    attributes "style",
    attributes ["style"],
    all attributes except ["style", "class"],
    all attributes except "style"
  ] {

  }
]] parse succeeds

test attributes html tag [[
  <div
    class="scopediv border rndButton "+attribute("class","")
    onclick= ""+attribute("onclick","")
    style = attribute("style")
    all attributes
    attributes "style"
    attributes ["style"]
    all attributes except ["style", "class"]
    all attributes except "style"
  >

  </div>
]] parse succeeds

test style tag [[
  <style>
    p {
      text-align: center;
      color: yellow;
    }
  </style>
]] parse succeeds

test style tag with variables [[
  <style foo=bar>
    p {
      text-align: ~a;
      color: ~color;
    }
  </style>
]] parse succeeds

test databind [[
  databind{ var p := "24242"; }
]] parse succeeds

test htmlwrapper 1 [[
  htmlwrapper gridContainerFluid gridrow[class="container-fluid" role=""]
]] parse succeeds

test htmlwrapper 2 [[
  htmlwrapper gridContainerFluid gridrow[class="container-fluid", role=""]
]] parse succeeds

test htmlwrapper 3 [[
  htmlwrapper gridContainerFluid gridrow
]] parse succeeds

test htmlwrapper 4 [[
  htmlwrapper {
    gridContainerFluid gridrow[class="container-fluid" role=""]
    header h1
      h1 h1
      h2 h2
      h3 h3
      h4 h4
      h5 h5
      h6 h6
      br br
      break br
      div div
      span span
      table table
      row tr
      column td
      par p
      pre pre
      spacer hr
      list ul[class="block"]
      listitem li[class="block"]
      block div[class="block"]
      container span[class="container"]
      groupitem tr
  }
]] parse succeeds

test multiple actions calls [[
  bla[class="123", onkeyup=validator();""+attribute("onkeyup"), onchange=bla()]
]] parse succeeds

test navigate 1 [[
  navigate bla("dfgdf",45,45,45.5)[sdfsf := "fdgdfgdf", dfsf := 3]{"1" "3rwef" bla() }
]] parse succeeds

test navigate 2 [[
  navigate(bla("dfgdf",45,45,45.5))[]{}
]] parse succeeds

test onclick element [[
  nlksddslak()[onclick := asjdna()]
]] parse succeeds

test placeholder 1 [[
  placeholder "1"+"2" {}
]] parse succeeds

test placeholder 2 [[
  placeholder bla {}
]] parse succeeds

test placeholder 3 [[
  placeholder "23424234" {}
]] parse succeeds

test placeholder 4 [[
  placeholder a.b {}
]] parse succeeds

test placeholder 5 [[
  placeholder adsf dfgd()
]] parse succeeds

test placeholder 6 [[
  placeholder "adsf" dfg()
]] parse succeeds

test placeholder 7 [[
  placeholder target{}
]] parse succeeds

test placeholder 8 [[
  placeholdervar phtest
]] parse succeeds

test redefine template [[
  define b(i:Int) = a(*,st)
]] parse succeeds
