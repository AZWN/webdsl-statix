#!/bin/bash

trap ctrl_c INT

function ctrl_c() {
    echo "Stopping execution of end to end tests"
}

repositories=(
    "https://github.com/webdsl/reposearch.git"
    "https://github.com/webdsl/yellowgrass.git"
)

function getJARFileName() {
    ls spoofax-sunshine/org.metaborg.sunshine2/target/org.metaborg.sunshine2*
}

function runEndToEndTests() {
    local jarFile="$1"

    for repo in ${repositories[@]}; do
        analyzeRepo "$repo" "$jarFile"
    done
}

function analyzeRepo() {
    local repo="$1"
    local jarFile="$2"
    local dirName=$(basename $repo .git)
    local resultFile="e2e-results/$dirName.txt"

    git clone --single-branch --branch experiment/strict-imports "$repo" --recurse-submodules

    addBuiltInToRepo "$dirName"

    java -Xmx4G -Xms4G -Xss64m -jar "$jarFile" build \
        -l webdslstatix \
        -p "$dirName" \
        &> "$resultFile"

    prependResultSummary $resultFile $dirName
}

function addBuiltInToRepo() {
	local repoDir="$1"
	local builtInDir="$repoDir/.servletapp/src-webdsl-template"

	if [ ! -f "$builtInDir/built-in.app" ]; then
		getLatestBuiltIn
		mkdir -p "$builtInDir"
		cp "built-in.app" "$builtInDir/built-in.app"
	fi

	sed -i -e "1s/.*/application $repoDir\n\nimports built-in/" "$repoDir/$repoDir.app"
}

function getLatestBuiltIn() {
	if [ ! -f "built-in.app" ]; then
		echo "built-in.app does not exist, getting latest version from GitHub."
		wget https://raw.githubusercontent.com/webdsl/webdsl/master/src/org/webdsl/dsl/project/template-webdsl/built-in.app \
			-q -O "built-in.app"
	fi
}

function prependResultSummary() {
    local resultFile="$1"
    local dirName="$2"
    local messageSummary=$(cat "$resultFile" | grep -Eo "[0-9]+ messages.*")
    local linesOfCode=$(find $dirName -name '*.app' | xargs wc -l | grep -Eo "[0-9]+ total")

    printf "$linesOfCode lines of code\n$messageSummary\n\n\n\nComplete output:\n\n" | cat - "$file" > tmp.txt && mv tmp.txt "$resultFile"
}

function main() {
    local jarFile="$(getJARFileName)"
    mkdir e2e-results
    runEndToEndTests "$jarFile"
    echo "DONE!"
}

main
