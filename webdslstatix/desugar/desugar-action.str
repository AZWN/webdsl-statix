module desugar/desugar-action

imports
  src-gen/signatures/-

signature constructors
  NoOrder : Term

rules

  normalize-action : OptSortNone() -> SimpleSort("Void")
  normalize-action : ReturnTypeNone() -> ReturnType(SimpleSort("Void"))
  normalize-action : OptElseNone() -> Block([])
  normalize-action : ForExpAlt(x, sort, exp, filter, groupby) -> ForExp(Var(x), x, sort, exp, filter, groupby)
  normalize-action : GoToAlt(pagecall) -> GoTo(pagecall)
  normalize-action : ObjectCreationAlt(sort, assignments) -> ObjectCreation(sort, assignments)
  normalize-action : EmailFunctionCallAlt(emailcall) -> EmailFunctionCall(emailcall)

// All rules and signatures below are copied directly from the WebDSL compiler.
// Some concrete syntax transformations have been rewritten as abstract syntax transformations

  normalize-action : FilterNoOrderByNoLimit(we) -> Filter(we, NoOrder(), Limit(Int("-1"), Int("0")))
  normalize-action : FilterNoWhereNoLimit(obe)  -> Filter(True(), obe, Limit(Int("-1"), Int("0")))
  normalize-action : FilterNoLimit(we, obe)     -> Filter(we, obe, Limit(Int("-1"), Int("0")))
  normalize-action : FilterNoOrderBy(we, l)     -> Filter(we, NoOrder(), l)
  normalize-action : FilterNoWhere(obe, l)      -> Filter(True(), obe, l)
  normalize-action : FilterNoWhereNoOrderBy(l)  -> Filter(True(), NoOrder(), l)
  
  normalize-action : LimitNoLimit(e) -> Limit(Int("-1"), e)
  normalize-action : LimitNoOffset(e) -> Limit(e, Int("0"))
  
  normalize-action : OrderNonSpecific(x) -> OrderAscending(x)
  
  normalize-action : IfNoElse(e, bit) -> If(e, bit, Block([]))
  
  normalize-action : IfWithElseIf(e, then, elseif*, else) -> If(e, then, else')
    with
      else' := <foldr(\ (ElseIf(c, t), rest) -> Block([If(c, t, rest)]) \ | else)> elseif*
  
  foldr(s | init) = foldr(!init, s)
