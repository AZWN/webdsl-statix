module WebDSL

imports
  WebDSL-Lexical
  WebDSL-Keywords
  WebDSL-UI
  WebDSL-Ajax
  WebDSL-Action
  WebDSL-DataModel
  WebDSL-DataValidation
  WebDSL-AccessControl
  WebDSL-XML
  WebDSL-JavaScript
  WebDSL-CSS
  WebDSL-Regex
  WebDSL-Enums
  WebDSL-Expand
  WebDSL-Native
  WebDSL-Dispatch
  WebDSL-Exception
  WebDSL-Type
  WebDSL-Test
  WebDSL-TimeInterval
  WebDSL-Service
  WebDSL-Search
  WebDSL-Prefetch
  WebDSL-Routing
  WebDSL-Attributes
  WebDSL-EntityDerive

context-free start-symbols

  Unit

context-free sorts

  QId UNDEFINED FormalArg

context-free syntax

  QId = Id 
  QId.Qualified = QId "." Id 

context-free syntax %% Types

  Sort = SimpleSort 
  Sort = GenericSort 
  Sort = RefSort 
  Sort = ListSort 
  Sort = SetSort 
  Sort = FunctionSort 
  SimpleSort.SimpleSort = Id 
  GenericSort.GenericSort = Id "<" {Sort ","}+ ">" 
  RefSort.RefSort = "Ref" "<" Sort ">" 
  RefSort.RefSort = "ref" Sort 
  GenericSort = "Ref" "<" Sort ">" {reject}
  
  %% List type '[Type]' and Set type '{Type}' notation
  ListSort.ListSort = "[" Sort "]"
  SetSort.SetSort = "{" Sort "}"
  
  %% function type; optionally specify (named) args and return type
  FunctionSort.FunctionSort = "function" FunctionSortParams FunctionSortReturn
  FunctionSortParams = "(" {FunctionSortParam ","}* ")"
  FunctionSortParams.FunctionSortParamsNone = <>
  FunctionSortParam.UnnamedArg = Sort 
  FunctionSortParam.Arg = Id ":" Sort 
  FunctionSortReturn = ":" Sort
  FunctionSortReturn.FunctionSortReturnNone = <>
  SimpleSort = "function" {reject}
  FormalArg.Arg = Id ":" Sort 

context-free sorts

  Application Module Unit Section Definition

syntax

  Section-CF.Section = "section" SectionName-CF LAYOUT?-CF Definition*-CF 

context-free syntax

  Application.ApplicationDefs = "application" QId Definition+ Section* 
  Application.Application = "application" QId Section* 
  Description.Description = "description" "{" Word* "}" 
  Description.Note = "note" "{" Word* "}" 
  Definition = Description 
  Module.Module = "module" ModuleName Section* 
  Module.ModuleDefs = "module" ModuleName Definition+ Section* 
  Definition.Imports = "imports" ModuleName 
  Unit = Application 
  Unit = Module 

context-free sorts

  Action Statements Statement

context-free syntax

  Definition = Action 
  Statements = Statement* 
  Definition = NativeClassDeclaration 
