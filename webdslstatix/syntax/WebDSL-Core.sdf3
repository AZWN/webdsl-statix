module WebDSL-Core

imports
  WebDSL-DataModel
  WebDSL-Lexical

context-free sorts

  QId FormalArg OptFormalArgs SimpleSort GenericSort RefSort ListSort SetSort FunctionSort FunctionSortParams Arg
  FunctionSortParam FunctionSortReturn

context-free syntax

  QId = Id 
  QId.Qualified = QId "." Id 

context-free syntax %% Types

  Sort = SimpleSort 
  Sort = GenericSort 
  Sort = RefSort 
  Sort = ListSort 
  Sort = SetSort 
  Sort = FunctionSort 
  SimpleSort.SimpleSort = Id 
  GenericSort.GenericSort = Id "<" {Sort ","}+ ">" 
  RefSort.RefSortAlt = "Ref" "<" Sort ">" 
  RefSort.RefSort = "ref" Sort 
  GenericSort = "Ref" "<" Sort ">" {reject}
  
  %% List type '[Type]' and Set type '{Type}' notation
  ListSort.ListSort = "[" Sort "]"
  SetSort.SetSort = "{" Sort "}"
  
  %% function type; optionally specify (named) args and return type
  FunctionSort.FunctionSort = "function" FunctionSortParams FunctionSortReturn
  FunctionSortParams = "(" {FunctionSortParam ","}* ")"
  FunctionSortParams.FunctionSortParamsNone = <>
  FunctionSortParam.UnnamedArg = Sort 
  Arg.Arg = Id ":" Sort
  FunctionSortParam = Arg
  FunctionSortReturn = ":" Sort
  FunctionSortReturn.FunctionSortReturnNone = <>
  SimpleSort = "function" {reject}
  FormalArg = Arg
  OptFormalArgs = "(" {FormalArg ","}* ")"
  OptFormalArgs.OptFormalArgsNone = <>

context-free sorts

  Unit Section Definition Description

syntax

  Section-CF.Section = "section" SectionName-CF LAYOUT?-CF Definition*-CF 

context-free syntax

  Unit.ApplicationDefs = "application" QId Definition+ Section* 
  Unit.Application = "application" QId Section* 
  Description.Description = "description" "{" Word* "}" 
  Description.Note = "note" "{" Word* "}" 
  Definition = Description 
  Unit.Module = "module" ModuleName Section* 
  Unit.ModuleDefs = "module" ModuleName Definition+ Section* 
  Definition.Imports = "imports" ModuleName

context-free sorts

  Action Statement

context-free syntax

  Definition = Action 