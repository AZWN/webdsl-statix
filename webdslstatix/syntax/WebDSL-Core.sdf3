module WebDSL-Core

imports
  WebDSL-DataModel
  WebDSL-Lexical

context-free sorts

  QId FormalArg OptFormalArgs FunctionSortParams FunctionSortParam FunctionSortReturn

context-free syntax

  QId = Id 
  QId.Qualified = QId "." Id 

context-free syntax %% Types

  Sort.SimpleSort   = SIMPLESORT
  Sort.GenericSort  = GENERICSORT "<" {Sort ","}+ ">"
  Sort.ListSort     = "[" Sort "]"
  Sort.SetSort      = "{" Sort "}"
  Sort.RefSort      = "ref" Sort
  Sort.RefSortAlt   = "Ref" "<" Sort ">"
  Sort.FunctionSort = "function" FunctionSortParams FunctionSortReturn

  %% function type; optionally specify (named) args and return type
  FunctionSortParams = "(" {FunctionSortParam ","}* ")"
  FunctionSortParams.FunctionSortParamsNone = <>
  FunctionSortParam.UnnamedArg = Sort
  FunctionSortParam.NamedArg = Id ":" Sort
  FunctionSortReturn = ":" Sort
  FunctionSortReturn.FunctionSortReturnNone = <>
  FormalArg.Arg = Id ":" Sort
  OptFormalArgs.FormalArgs = "(" {FormalArg ","}* ")"
  OptFormalArgs.OptFormalArgsNone = <>

lexical sorts

  SIMPLESORT GENERICSORT

lexical syntax

  SIMPLESORT = Id
  SIMPLESORT = "function" {reject}
  GENERICSORT = Id
  GENERICSORT = "Ref" {reject}

context-free sorts

  Unit Section Definition Description

syntax

  Section-CF.Section = "section" SectionName-CF LAYOUT?-CF Definition*-CF 

context-free syntax

  Unit.ApplicationDefs = "application" QId Definition+ Section* 
  Unit.Application = "application" QId Section* 
  Description.Description = "description" "{" Word* "}" 
  Description.Note = "note" "{" Word* "}" 
  Definition = Description 
  Unit.Module = "module" ModuleName Section* 
  Unit.ModuleDefs = "module" ModuleName Definition+ Section* 
  Definition.Imports = "imports" ModuleName

context-free sorts

  Action Statement

context-free syntax

  Definition = Action 