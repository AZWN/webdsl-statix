module WebDSL-Core

imports
  WebDSL-Action
  WebDSL-DataModel
  WebDSL-Lexical

context-free sorts

  QId FormalArg OptFormalArgs FunctionSortParams FunctionSortParam FunctionSortReturn OptCallArgs

context-free syntax

  QId = Id
  QId.Qualified = <<QId> . <Id>>

context-free syntax %% Types

  Sort.SimpleSort = SIMPLESORT
  Sort.GenericSort = <<GENERICSORT> \< <{Sort ","}+> \>>
  Sort.ListSort = <[ <Sort> ]>
  Sort.SetSort = <{ <Sort> }>
  Sort.RefSort = <ref <Sort>>
  Sort.RefSortAlt = <Ref \< <Sort> \>>
  Sort.FunctionSort = <function <FunctionSortParams> <FunctionSortReturn>>

  %% function type; optionally specify (named) args and return type
  FunctionSortParams.FunctionSortParams = <( <{FunctionSortParam ","}*> )>
  FunctionSortParams.FunctionSortParamsNone = <>
  FunctionSortParam.UnnamedArg = Sort
  FunctionSortParam.NamedArg = <<VarId> : <Sort>>
  FunctionSortReturn.FunctionSortReturn = <: <Sort>>
  FunctionSortReturn.FunctionSortReturnNone = <>

  FormalArg.Arg = <<VarId> : <Sort>>
  OptFormalArgs.FormalArgs = <( <{FormalArg ","}*> )>
  OptFormalArgs.OptFormalArgsNone = <>

  OptCallArgs.CallArgs = <( <{Exp ","}*> )>
  OptCallArgs.OptCallArgsNone = <>

context-free sorts

  Unit Section Definition EnumValue

syntax

  Section-CF.Section = "section" SectionName-CF LAYOUT?-CF Definition*-CF

context-free syntax

  Unit.ApplicationDefs = <application <QId>
    <Definition+>

    <Section*>
  >

  Unit.Application = <application <QId>
    <Section*>
  >

  Unit.ModuleDefs = <module <ModuleName>
    <Definition+>

    <Section*>
  >

  Unit.Module = <module <ModuleName>
    <Section*>
  >

  Definition.Imports = <
    imports <ModuleName>
  >
  Definition.Description = <
    description { <Word*> }
  >
  Definition.Note = <
    note { <Word*> }
  >

  Definition.Enum = <
    enum <Id> {
      <{EnumValue ","}*>
    }
  >
  EnumValue.EnumValue = <<Id> ( <StringValue> )>

context-free sorts

  Action Statement

context-free syntax

  Definition = Action
