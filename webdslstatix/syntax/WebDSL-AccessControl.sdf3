module WebDSL-AccessControl 

imports
  WebDSL-Action
  WebDSL-Core
  WebDSL-DataModel
  WebDSL-Lexical

context-free sorts

  // Optional sorts
  OptMatchArgs OptId OptWildCardArg

  // Access control sorts
  AccessControlDefinition AccessControlRule AccessControlPointcutElement
  AccessControlImportRulesArg PolicyExp MatchArgs

lexical sorts

  MatchId AccessControlType

lexical syntax

  MatchId = [a-zA-Z] [a-zA-Z0-9\_\-]* [\*]? 
  MatchId = [\*] 
  AccessControlType = "page"
  AccessControlType = "action"
  AccessControlType = "template"
  AccessControlType = "ajaxtemplate"
  AccessControlType = "pointcut"

context-free syntax

  Section.AccessControlDefinition = "access" "control" "rules" OptId AccessControlDefinition* 
  Section.AccessControlDefinitionAlt = "access" "control" "rules" "{" OptId AccessControlDefinition* "}"
  OptId.OptIdNone = <>
  OptId.OptIdSome = Id
  Definition.AccessControlPrincipalDef                = "principal" "is" Id "with" "credentials" {Id ","}+
  AccessControlDefinition.AccessControlPrincipalAcDef = "principal" "is" Id "with" "credentials" {Id ","}+
  AccessControlDefinition.Rule = AccessControlRule 
  AccessControlRule.AccessControlRule = "rule" AccessControlType MatchId OptMatchArgs "{" Exp AccessControlRule* "}"
  AccessControlRule.SpecialAccessControlRule = "rule" "logsql" "{" Exp "}"
  OptMatchArgs.OptMatchArgsSome = "(" MatchArgs ")"
  OptMatchArgs.OptMatchArgsNone = <>
  MatchArgs.MatchArgs = {FormalArg ","}* OptWildCardArg {prefer}
  Definition.Predicate = "predicate" Id OptFormalArgs "{" Exp "}"
  AccessControlDefinition.PredicateAc = "predicate" Id OptFormalArgs "{" Exp "}"
  EntityBodyDeclaration.PredicateInEntity = "predicate" Id OptFormalArgs "{" Exp "}" 
  AccessControlDefinition.AccessControlPointcut = "pointcut" Id "(" {FormalArg ","}* ")" "{" {AccessControlPointcutElement ","}* "}"
  AccessControlPointcutElement.AccessControlPointcutElement = AccessControlType MatchId "(" {Id ","}* OptWildCardArg ")"
  TemplateElement.AccessControlImportRules = "apply ac rules" Id "(" {AccessControlImportRulesArg ","}* ")" {prefer}
  AccessControlImportRulesArg.ACVar = Id 

  OptWildCardArg.OptWildCardArgNone = <>
  OptWildCardArg.WildCardArg = "*"

context-free syntax

  Section.ACPolicy = "access" "control" "policy" PolicyExp 
  PolicyExp.Name = Id 
  PolicyExp = "(" PolicyExp ")" {bracket}
  PolicyExp.PolicyAnd = PolicyExp "AND" PolicyExp {assoc}
  PolicyExp.PolicyOr = PolicyExp "OR" PolicyExp {assoc}

context-free syntax

  Modifier.IgnoreAccessControl = "ignore-access-control" 
